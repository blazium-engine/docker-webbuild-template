# Author: Randolph William Aarseth II <randolph@divine.games>
# Project: Blazium Engine
# Description: Nginx configuration for deploying web-exported games with WASM compression.
# Documentation: This configuration includes the /.proxy/ route required for Discord Embedded Web Applications to properly load assets.
# Also provides Support for Youtube Playables which requires special treatment regarding filesize of wasm files.

worker_processes 1;

events {
    worker_connections 1024;
}

http {
    include       mime.types;                    # Include default mime types
    default_type  application/octet-stream;      # Default type if not matched
    
    gzip on;
    gzip_types application/wasm;
    gzip_proxied any;
    gzip_min_length 1000;
    gzip_comp_level 6;

    server {
        listen 8080;

        # Proxy configuration for Discord Embedded Web Applications
        location /.proxy/ {
            alias /usr/share/nginx/html/;        # Serve content from the static HTML directory
            index index.html;
            try_files $uri $uri/ =404;

            add_header Cross-Origin-Opener-Policy "same-origin" always;
            add_header Cross-Origin-Embedder-Policy "require-corp" always;
        }

        # Serve documentation and main content
        location / {
            root /usr/share/nginx/html;
            index index.html;
            try_files $uri $uri/ =404;

            add_header Cross-Origin-Opener-Policy "same-origin" always;
            add_header Cross-Origin-Embedder-Policy "require-corp" always;
        }

        # Serve precompressed WASM files if supported
        location ~* \.(wasm)$ {
            root /usr/share/nginx/html;
            add_header Vary Accept-Encoding;
            add_header Content-Type application/wasm;
            
            if ($http_accept_encoding ~* gzip) {
                add_header Content-Encoding gzip;
                rewrite ^(.*/)([^/]+\.wasm)$ $1$2.gz break;
            }
            
            try_files $uri $uri.gz =404;
        }

        # Health check endpoint for monitoring purposes
        location /health {
            access_log off;                      # Disable access logs for health checks
            set $content_type "text/plain";
            set $response_body "OK";
            
            if ($http_accept ~* "application/json") {
                set $content_type "application/json";
                set $response_body '{"status": "ok"}';
            }
            
            add_header Content-Type $content_type;
            return 200 $response_body;
        }
    }
}
